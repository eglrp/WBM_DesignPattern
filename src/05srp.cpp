#include <iostream>
#include <string>
#include <vector>
#include <list>

using namespace std;

// Simple Responsibility Principle.

//所谓单一职责原则就是一个类只负责一个职责，只有一个引起变化的原因。
//如果一个类承担的职责过多，就等于把这些职责耦合在一起，一个职责的变化会削弱或抑制这个类完成其他职责的能力，这个耦合会脆弱的设计。
//软件设计真正要做的许多内容，就是发现职责并把这些职责相互分离；如果能够想到多于一个动机去改变一个类，那么这个类就具有多于一个职责，就应该考虑类的分离。

int main05() {

  return 0;
}